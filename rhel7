Cahnge root passwd

-        Start system and at GRUB2 boot menu, press ‘e’ to edit default boot item.
-        Scroll down to locate ‘rhgb quiet’ and replace it with ‘rd.break enforcing=0’
-        Press Ctrl-x to start
-        Remount / File System with read and write option
# mount –o remount,rw /sysroot
-        To access system 
# chroot /sysroot
-        Change root’s password
# passwd
-        SELinux relabeling
# touch /.autorelabel
-        Reboot System
# exit, exit (or Ctrl-b, Ctrl-b)
---------------------------------------
$ sudo dhclient -r eth0
$ sudo dhclient eth0
--------------------------------------
Change the hostname to mycentos.example.com

# hostnamectl set-hostname mycentos.example.com

Set the default target to boot into X Window level (previously level 5).

# systemctl set-default graphical.target
#systemctl isolate multi-user.target 

Create a cron job running as root, starting at 11PM every day and writing a report on daily system resource consumption in the /log file.


# crontab -e
00 23 * * * /usr/bin/sar -A > /log


Create a logical volume of 200MB called lv_swap2 and add it permanently to the current swap space.
-------------------------------------------
1.
# swapoff -v /dev/rhel/swap
# lvm lvreduce /dev/rhel/swap -L -200M
# mkswap /dev/rhel/swap
# swapon /dev/rhel/swap
# lvcreate -L 200M -n lv_swap2 rhel
# mkswap /dev/rhel/lv_swap2
# swapon /dev/rhel/lv_swap2
------------------------------------------
2. ---not logical volume
# dd if=/dev/zero of=/awapfile bs=1M count=200
# mkswap /awapfile 
# swapon /awapfile
# chmod 600 awapfile
-------------------------------------------
3. ----use loopback, not working so far
# dd if=/dev/zero of=/virtualfs bs=1M count=200
# losetup /dev/loop0 (find if something exsist already, if yes change to loop1, loop2...)
# losetup /dev/loop0 /virtualfs
# fdisk /dev/loop0
Create one primary bootable partition on the device. 
his can be done by using the following key press combination: 
n p 1 Enter Enter a 1 p w
n p 1 t 8e a 1 p w
# mkfs.xfs -f /dev/loop0
# pvcreate /dev/loop0
vgreduce --removemissing -v rhel (this is how you remove bad PV)
# vgextend rhel /dev/loop0
# lvcreate -L 200M -n lv_swap3 rhel
# mkswap /dev/rhel/lv_swap3
# swapon /dev/rhel/lv_swap3
-------------------------------------------------
vi /etc/fstab
/dev/mapper/rhel-lv_swap2 swap swap defaults 0 0
or
/awapfile                 swap swap defaults 0 0
or 


Configure a virtual console.(What for?)

grubby –update-kernel=ALL - - args=”console=ttyS0″

How to create local repo

# mount -o loop /dev/cdrom  /mnt
# cp /mnt/media.repo /etc/yum.repos.d/rhel7dvd.repo
# chmod 644 /etc/yum.repos.d/rhel7dvd.repo
vi /etc/yum/repos.d/rhel7dvd.repo
enabled=1
baseurl=file:///mnt/
# yum clean all
# subscription-manager clean
# yum list --noplugin
# yum update --noplugin

Assign the same SELinux contexts used by the home directories to the /xfs directory permanently. (??)

# yum install -y setroubleshoot-server
# semanage fcontext -a -t user_home_t “/xfs(/.*)?”
-bash: syntax error near unexpected token `('
# restorecon -R /xfs 

Create an ext4 file system on a new logical volume of 100MB called lv_ext4. Mount it permanently under the /ext4 directory.
Copy the files previously created into this new space.

# swapoff -v /dev/rhel/swap
# lvm lvreduce /dev/rhel/swap -L -100M
# mkswap /dev/rhel/swap
# swapon /dev/rhel/swap
# lvcreate -L 100M -n lv_ext4 rhel
# mkfs.ext4 /dev/rhel/lv_ext4
# mkdir /ext4
# vi /etc/fstab
/dev/mapper/rhel-lv_ext4 /ext4 ext4 defaults 1 2
# cp -p /xfs/.f* /ext4 (?)

Write a Bash script called prog.sh in the /root directory that creates 40 files of 2MB each with the fallocate command 
in the mounted /xfs directory. Each file has got a name as follows: .file_N where N is a number from 1 to 40.

cd /root
vi prog.sh
-------
#!/bin/bash
cd /xfs
for ((i = 1; i < 40+1; i++)) ; do
fallocate -l 2M ."file_$i"
done
——————–
# chmod u+x prog.sh
# ./prog.sh

Create a xfs file system on a new logical volume of 100MB called lv_xfs.
Mount it permanently with uuid under /xfs.

 # lvcreate –size 100M –name lv_xfs /dev/vg
# mkfs.xfs /dev/vg/lv_xfs
# mkdir /xfs
# blkid | grep lv_xfs >> /etc/fstab
# vi /etc/fstab
UUID=… /xfs xfs defaults 1 2
# mount -a
